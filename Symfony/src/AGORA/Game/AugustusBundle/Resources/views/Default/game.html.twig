<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>Augustus - {{ gameName }}</title>
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/agoragameaugustus/css/game.css') }}">
        <link rel="stylesheet" type="text/css" href="{{ asset('bundles/agoragameaugustus/css/tchat.css') }}">
        <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
        <script> var playerUsername = "";</script>
    </head>

    <body>
        <div class="overlay" onclick="removeOverlay(this)">
            <div class="overlayContent" onclick="event.stopPropagation()">
            </div>
        </div>

        <div id="gameContent" class="flexContainer">
            <div id="playersInfo" class="flexContainer flexColumn">
                <div id="allPlayersInfo" class="flexContainer flexColumn" onload="selectPlayer(0)">
                    {% for player in game.players %}
                        <div class="playerInfo" onclick="selectPlayer( {{ loop.index0 }} )">
                            <p class="p">
                                {{ player.name ? player.name : "null" }}<br>
                                Légions : {{ player.legion }}/{{ player.legionMax }}<br>
                                Objectifs sous contrôle : {{ player.ctrlObj|length }}
                            </p>
                        </div>
                    {% endfor %}
                </div>

                <div class="flex1"></div>

                <div id="myInfo">
                    <p class="p">
                        {{ me.name }}<br>
                        Légions :<br>
                        {{ me.legion }}/{{ me.legionMax }}<br>
                        Score :<br>
                        {{ me.score }}
                        <br>
                        Resssources :<br>
                        Blé : {{ me.wheat }}<br>
                        Or : {{ me.gold }}<br>
                    </p>
                </div>
            </div>

            <div class="flex1"></div>

            <div id="boardAndHand" class="flexContainer flexColumn">
                <div id="instructions">
                    <p class="p">{{ "TODO instructions" }}</p>
                </div>

                
                <div id="playerBar" class="flexContainer flexRow">

                    {% for player in game.players %}
                    <div class="selectedPlayerInfo" style="visibility: hidden">
                        <div>
                            <p class="p">
                        
                                {{ player.name }}<br>
                                Légions :<br>
                                {{ player.legion }}/{{ player.legionMax }}
                            </p>
                        </div>

                        <div class="flex1"></div>

                        {% for card in player.currObj %}
                        <div class="card" style="background-image: url('{{ asset('bundles/agoragameaugustus/img/Cards/' ~ card.number ~ '.jpg') }}');">
                            {% for token in card.tokens.length %}
                            {% if controlledToken[loop.index] %} <!-- TODO  remplacer par la bonne péthode pour savoir si un token est controllé -->
                            <img src='../../img/Token/legion.png' class="legion" style="top: {{ 31 * loop.index }}px;">
                            {% endif %}
                            {% endfor %}
                        </div>
                        <!--
                        <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ card.number ~ '.jpg') }}" alt="Card{{ card.number }}" height="200" ondblclick="getOverlay(cardInfo( {{ card.number }} ))">
                        -->
                        {% endfor %}

                        <div class="flex1"></div>

                        <div class="flexContainer flexColumn">
                            <button>Captures</button>
                            <button>Récompenses</button>
                        </div>
                    </div>
                    {% endfor %}
                    
                </div>

                <!-- <div class="flex1"></div> -->

                <div id="boardBar" class="flexContainer flexRow">
                    <div class="flex1"></div>

                    <div id="lootBars" class="flexContainer flexColumn">
                        <div id="topLoot" class="flexContainer flexRow">
                            <!-- TODO make infos for each loot -->
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/Loot2Cards.jpg') }}" alt="Loot2Cards" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( '2' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/Loot3Cards.jpg') }}" alt="Loot3Cards" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( '3' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/Loot4Cards.jpg') }}" alt="Loot4Cards" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( '4' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/Loot5Cards.jpg') }}" alt="Loot5Cards" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( '5' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/Loot6Cards.jpg') }}" alt="Loot6Cards" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( '6' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootGold.jpg') }}" alt="LootGold" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'gold' ))">
                        </div>

                        <div class="flex1"></div>

                        <div id="botLoot" class="flexContainer flexRow">
                            <!-- TODO make infos for each loot -->
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootSenator.jpg') }}" alt="LootSenator" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'senator' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootGreen.jpg') }}" alt="LootGreen" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'green' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootMulti.jpg') }}" alt="LootMulti" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'multi' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootRose.jpg') }}" alt="LootRose" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'rose' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootOrange.jpg') }}" alt="LootOrange" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'orange' ))">
                            <img src="{{ asset('bundles/agoragameaugustus/img/Loot/LootWheat.jpg') }}" alt="LootWheat" height="100" class="{{ not loot.isAvailable ? taken }}" onclick="selectBoard(this)" ondblclick="getOverlay(lootInfo( 'wheat' ))">
                        </div>
                    </div>

                    <div class="flex1"></div>

                    <div id="objLine" class="flexContainer flexRow">
                        <div class="flexContainer flexColumn">
                            <div>
                                <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ game.board.objLine[0].number ~ '.jpg') }}" alt="Card{{ board.objLine[0].number }}" height="100" onclick="selectBoard(this)" ondblclick="getOverlay(cardInfo( {{ game.board.objLine[0].number }} ))">
                                <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ game.board.objLine[1].number ~ '.jpg') }}" alt="Card{{ board.objLine[1].number }}" height="100" onclick="selectBoard(this)" ondblclick="getOverlay(cardInfo( {{ game.board.objLine[1].number }} ))">
                            </div>
                            <div>
                                <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ game.board.objLine[2].number ~ '.jpg') }}" alt="Card{{ board.objLine[2].number }}" height="100" onclick="selectBoard(this)" ondblclick="getOverlay(cardInfo( {{ game.board.objLine[2].number }} ))">
                                <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ game.board.objLine[3].number ~ '.jpg') }}" alt="Card{{ board.objLine[3].number }}" height="100" onclick="selectBoard(this)" ondblclick="getOverlay(cardInfo( {{ game.board.objLine[3].number }} ))">
                            </div>
                        </div>
                        <div class="flexContainer flexColumn">
                            <div class="flex1"></div>
                            <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ game.board.objLine[4].number ~ '.jpg') }}" alt="Card{{ board.objLine[4].number }}" height="100" onclick="selectBoard(this)" ondblclick="getOverlay(cardInfo( {{ game.board.objLine[4].number }} ))">
                            <div class="flex1"></div>
                        </div>
                    </div>
                </div>

                <!-- <div class="flex1"></div> -->

                <div id="myBar" class="flexContainer flexRow">
                    {% for card in me.currObj %}
                        {% set cardIndex = loop.index0 %}
                    <div class="card" style="background-image: url('{{ asset('bundles/agoragameaugustus/img/Cards/' ~ card.number ~ '.jpg') }}');">
                        {% for token in card.tokens.length %}
                            {% if controlledToken[loop.index0] %} <!-- TODO  remplacer par la bonne méthode pour savoir si un token est controllé -->
                            <img src='../../img/Token/legion.png' class="legion" style="top: {{ 31 * loop.index }}px;">
                            {% endif %}
                        {% endfor %}
                        <div class="cardAction{{ loop.index0 }} cardAction" style="visibility: hidden;">
                            <div>
                                <p>Vous pouvez retirer une légion d'un de ces emplacements en le sélectionnant:</p>
                                {% for token in card.tokens.length %}
                                    {% if controlledToken[loop.index] %}
                                    <img class="token" src="../../img/Token/Token{{ token.name }}.jpg" height="32" onclick="selectToken(this, loop.index0, {{ cardIndex }})">
                                    {% endif %}
                                {% endfor %}
                                <button onclick="removeSelectedToken()">Retirer</button>

                                <br>
                                <br>
                            </div>
                            <div>
                                <p>Vous pouvez placer une légion sur cette carte :</p>
                                <button onclick="removeSelectedToken()">Placer</button>
                            <div>
                        </div>
                    </div>
                    <!--
                        <img src="{{ asset('bundles/agoragameaugustus/img/Cards/' ~ card.number ~ '.jpg') }}" alt="Card{{ card.number }}" height="200" onclick="selectHand(this)" ondblclick="getOverlay(cardInfo( {{ card.number }} ))">
                    -->
                    {% endfor %}

                    <div class="flex1"></div>

                    <div class="flexContainer flexColumn">
                        <button>Captures</button>
                        <button>Récompenses</button>
                    </div>
                </div>

                <div id="buttons" class="flexContainer flexRow">
                    <div class="flex1"></div>
                    <button onclick="validate()">Valider</button>
                    <button onclick="resetSelected()">Annuler</button><!-- onclick : devrait peut-être refresh la page -->
                    <div class="flex1"></div>
                </div>
            </div>

            <div class="flex1"></div>

            <div id="tokenInfo" class="flexContainer flexColumn">
                <img src="{{ asset('bundles/agoragameaugustus/img/Token/TokenCount.jpg') }}" alt="TokenHelp" width="150">
                <div class="flexContainer flexRow">
                    <p class="p">Jeton du tour : </p>
                    <img src="{{ asset('bundles/agoragameaugustus/img/Token/Token' ~ game.currToken ~ '.jpg') }}" alt="{{ game.currToken }}" height="55">
                </div>
            </div>
        </div>

        <!-- THERE WAS LINE 151 to 388 FROM AVE CESAR GAME TWIG -->

        <!-- SCRIPTS -->
        <script>

            //get infos string from nbr of a card
            function cardInfo(nbr) {
                switch(nbr) {
                  case 1:
                    return "placeholder info of card 1";
                  case 2:
                    return "placeholder info of card 2";
                  case 3:
                    return "placeholder info of card 3";
                  default:
                    return "could not find info for card n" + nbr;
                }
            }

            //get the infos string from nbr of a loot
            function lootInfo(loot) {
                switch(loot) {
                  case '2':
                    return advantageInfo(2, 2);
                  case '3':
                    return advantageInfo(3, 4);
                  case '4':
                    return advantageInfo(4, 6);
                  case '5':
                    return advantageInfo(5, 8);
                  case '6':
                    return advantageInfo(6, 10);
                  case 'gold':
                    return "<p>Cette carte revient au joueur qui possède le plus de cartes d'or.</p>" +
                    "<p>Elle rapportera  5 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootGold.jpg') }}\" height='100' />";
                  case 'green':
                    return "<p>Cette carte revient automatiquement aux joueurs qui contrôlent 3 cartes objectifs vertes.</p>" +
                    "<p>Elle rapportera  4 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootGreen.jpg') }}\" height='100' />";
                  case 'orange':
                    return "<p>Cette carte revient automatiquement aux joueurs qui contrôlent 3 cartes objectifs oranges.</p>" +
                    "<p>Elle rapportera  10 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootOrange.jpg') }}\" height='100' />";
                  case 'multi':
                    return "<p>Cette carte revient automatiquement aux joueurs qui contrôlent 3 cartes objectifs de couleurs différentes.</p>" +
                    "<p>Elle rapportera  6 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootMulti.jpg') }}\" height='100' />";
                  case 'rose':
                    return "<p>Cette carte revient automatiquement aux joueurs qui contrôlent 3 cartes objectifs roses.</p>" +
                    "<p>Elle rapportera  8 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootRose.jpg') }}\" height='100' />";
                  case 'senator':
                    return "<p>Cette carte revient automatiquement aux joueurs qui contrôlent 3 cartes sénateurs.</p>" +
                    "<p>Elle rapportera  2 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootSenator.jpg') }}\" height='100' />";
                  case 'wheat':
                    return "<p>Cette carte revient au joueur qui possède le plus de cartes d'blé.</p>" +
                    "<p>Elle rapportera  5 poins lors du décompte final.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/LootWheat.jpg') }}\" height='100' />";
                  default:
                    return "could not find info for card n" + nbr;
                }
            }

            function advantageInfo(obj, points) {
                return "<p>Il vous faut contrôler "+ obj +" objectifs pour saisir cette carte.</p>" +
                    "<p>Elle vous rapportera "+ points +" points lors du décompte final.</p>" +
                    "<p>Vous ne pouvez saisir qu'une seule carte récompense lors de la partie.</p>" +
                    "<img src=\"{{ asset('bundles/agoragameaugustus/img/Loot/Loot"+ obj +"Cards.jpg') }}\" height='100' />";
            }


            function getOverlay(infos) {
                document.querySelector(".overlay").innerHTML = infos;
                document.querySelector(".overlay").classList.add("visible");
                
            }

            function removeOverlay(element) {
                document.querySelector(".overlay").classList.remove("visible");
                document.querySelector(".overlay").innerHTML = "";
            }

            function validate() {
                //DO VARIOUS THINGS
                //TODO
				var phase = {{ game.state }};
				
				switch (phase) {
					case "legion": //Placement Légion
						putLegion();
						break;
					case "aveCesarCard": //Ave Cesar Pouvoir et ressource
                        getRessource();
                        break;
                    case "aveCesarLoot": //Ave Cesar Loot
                        takeLoot();
                        break;
					default: //
						console.log('Sorry, there is a problem of phase (validate function)');
				}

                resetSelected();
            }

			//phase 1
			function putLegion() {
				//action.from & to
				var toPlayer = action.addToken.iPlayer;
				var toCard = action.addToken.iCard;
				var toToken = action.addToken.iToken;
				
				var fromPlayer = action.removeToken.iPlayer;
				var fromCard = action.removeToken.iCard;
				var fromToken = action.removeToken.iToken;
				
				if (toCard != null && toToken != null && toPlayer != null) {
					if (fromCard != null && fromToken != null && fromPlayer != null) {
						//putLegionFromDestToSource(dest, source)
						sendXHR("{{ path('putLegionFromTo') }}?toPlayer=" + toPlayer + "&toCard=" + toCard + "&toToken=" + toToken
						+ "&fromPlayer=" + fromPlayer + "&fromCard=" + fromCard + "&fromToken=" + fromToken);
					} else {
						//putLegionOnCard(Card)
						sendXHR("{{ path('putLegion') }}?toPlayer=" + toPlayer + "&toCard=" + toCard + "&toToken=" + toToken);
					}
				}
			}

            //phase 2
            function getRessource() {
                {#order = {{ game.aveCesarOrder() }};#}
                {#order.forEach(function(player) {#}
                    {#if(player.getCards().forEach(function(card) {#}
                        {#if(card.getCtrlTokens().count() == card.getTokens().count()) {#}
                            {#switch (card.getResource()) {#}
                                {#case "gold" :#}
                                    {#player.addWheat();#}
                                    {#break;#}
                                {#case "wheat" :#}
                                    {#player.addGold();#}
                                    {#break;#}
                                {#case "both" :#}
                                    {#player.addGold();#}
                                    {#player.addWheat();#}
                                    {#break;#}
                                {#default :#}
                                    {#console.log('Sorry, there is a problem of ressource');#}

                            {#}#}
                        {#}#}
                    {#}));#}
                {#});#}
            }
            // case "TwoLegionOnDoubleSword" :
            function doTwoLegionOnDoubleSword() {

            }
            // case "TwoLegionOnTeaches" :
            function doTwoLegionOnTeaches() {

            }
            // case "TwoLegionOnShield" :
            function doTwoLegionOnShield() {

            }
            // case "TwoLegionOnKnife" :
            function doTwoLegionOnKnife(){

            }
            // case "OneCard" :
            function doOneCard(){

            }
            // case "RemoveOneLegion" :
            function doRemoveOneLegion(){

            }
            // case "RemoveTwoLegion" :
            function doRemoveTwoLegion() {

            }
            // case "MoveLegion" :
            function doMoveLegion() {

            }
            // case "OneLegionOnAnything" :
            function doOneLegionOnAnything() {

            }
            // case "TwoLegionOnChariot" :
            function doTwoLegionOnChariot() {

            }
            // case "TwoLegionOnCatapult" :
            function doTwoLegionOnCatapult() {

            }
            // case "TwoLegionOnAnything" :
            function doTwoLegionOnAnything() {

            }
            // case "RemoveAllLegion" :
            function doRemoveAllLegion() {

            }




			//phase 3
			function takeLoot() {
				var loot = document.querySelectorAll(".selectedBoard");
                if (loot != null) {
                    loot = loot.alt.replace("Loot", "");
                    if (loot != null) {
                        //getLoot(loot)
                        //TODO s'assurer que la variable globale loot ne peut être affectée 
                        sendXHR("{{ path('takeLoot') }}?loot=" + loot);
                    }
                }
			}
			

			
			function sendXHR(path) {
				var xhr = new XMLHttpRequest();
				xhr.onreadystatechange = function() {
					if (xhr.readyState == XMLHttpRequest.DONE) {
						document.write(xhr.responseText);
					}
				}
				xhr.open('GET', path, true);
				xhr.send();
			}

            function resetSelected() {
                var board = document.querySelectorAll(".selectedBoard");
                var hand = document.querySelectorAll(".selectedHand");

                board.forEach(function (element) {
                    element.classList.remove("selectedBoard");
                });
                hand.forEach(function (element) {
                    element.classList.remove("selectedHand");
                });
            }

            function selectHand(e) {
                resetSelected();
                var src = e;
                src.classList.add("selectedHand");
                
                if (document.querySelector(".action").hasChildNodes()) {
                    document.querySelector(".action").firstChild.style.visibility = "hidden";
                    document.querySelector("#myBar").querySelectorAll(".card")[document.querySelector(".action").childNodes[0].classList[0].replace("cardAction","")].appendChild(document.querySelector(".action").firstChild);
                }

                e.querySelector(".cardAction").style.visibility = "visible";
                document.querySelector(".action").appendChild(e.querySelector(".cardAction"));
            }
            
            var action = {};
            var selectedToken = {};
            var selectedCard = {};
            function selectToken(e, indToken, indCard) {
                document.querySelectorAll(".selectedToken").forEach( function (ee) {
                    ee.classList.remove("selectedToken");
                });

                e.classList.add("selectedToken");
                selectedToken.ind = indToken;
                //selectedToken.elem = e;
                selectedCard.ind = indCard;
            }

            function removeSelectedToken() {
                removeToken = {};
                
                removeToken.token = selectedToken;
                removeToken.card = selectedCard;
                
                action.removeToken = removeToken;

                //selectedToken.elem.style.visibility = "hidden";
                
                document.querySelectorAll(".cardAction").forEach( function (ee) {
                    ee.firstElementChild.innerHTML = "<p>Vous avez retiré une légion, vous ne pouvez plus en retirer davantage.</p>";
                });
            }
            
            function addBestToken() {
                //TODO fonction de prise du token le plus rare pour le joueur
            }

            function selectBoard(e) {
                if ({{game.phase}} == "legion") return;
                
                resetSelected();
                var src = e;
                src.classList.add("selectedBoard");
            }

            function resetSelectedPlayer() {
                var e = document.querySelectorAll(".selectedPlayer");

                e.forEach(function (element) {
                    element.style.visibility = "hidden";
                });
            }

            function selectPlayer(i) {
                resetSelectedPlayer();
                document.querySelectorAll(".selectedPlayer")[n].style.visibility = "visible";
            }




            //disable all drag effect on the images :
            document.querrySelecotAll("img").forEach(function (imgElem)) {
                imgElem.draggable = false;
            }
        </script>






        <!-- TCHAT DIV + SCRIPT -->
        <div class="tchat">
            <div class="titleTchat">
                <img id="flecheTchat" src="{{ asset('bundles/agoragameavecesar/image/fleche_historique_bas.png') }}" alt="x">
                <i>Chat du lobby</i>
            </div>
            <div id="discussion"></div>
            <textarea id="UserMessage" placeholder="Entrez votre message ici"></textarea>
        </div>
        <button id="buttAcc" onclick="window.location.href = '{{ app.request.getSchemeAndHttpHost() }}'">Accueil</button>
        <script>//Script gérant le tchat
            document.getElementById('UserMessage').addEventListener('keypress', function (event) {
                var key = event.hasOwnProperty('which') ? event.which : event.keyCode;
                if (key === 13) { // 13 est la touche entrée
                    var div = document.createElement("div");
                    var message = document.getElementById('UserMessage').value;
                    /*
                    var clientInformation = {
                        gameId: {{ game.id }},
                            playerId: {{ player.id }},
                            action : {
                                type: "message",
                                username: playerUsername,
                                message: message
                                },
                            gameCode : "aug"
                        };
                        */
                    div.textContent = "Moi : " + message;
                    document.getElementById('UserMessage').value = "";
                    div.className = "messageMy";
                    document.getElementById("discussion").appendChild(div);
                    conn.send(JSON.stringify(clientInformation));
                }
            });
            var flecheTchat = document.getElementById("flecheTchat");
            flecheTchat.addEventListener("click", tchatOnClick);
        </script>
    </body>
</html>